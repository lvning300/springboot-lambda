server:
  port: 9000

spring:
  application:
    name: springboot-lambda-service
  profiles:
    active: dev
  datasource:
    hikari:
      idle-timeout: 200000
      maximum-pool-size: 10
      minimum-idle: 30
      connection-timeout: 600000
      connection-test-query: SELECT 1
      pool-name: HikariPool
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url:  jdbc:sqlserver://springboot-sqlserver.c2lighgovwg5.rds.cn-northwest-1.amazonaws.com.cn:1433;databasename=test_db
    username: root
    password: root123456
  redis:
    database: 0
    host: 52.82.29.19
    jedis:
      pool:
        #最大连接数据库连接数,设 0 为没有限制
        max-active: 8
        #最大等待连接中的数量,设 0 为没有限制
        max-idle: 8
        #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        max-wait: -1ms
        #最小等待连接中的数量,设 0 为没有限制
        min-idle: 0
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1ms
        min-idle: 0
      shutdown-timeout: 100ms
    password:
    port: 6379

aws:
  awsAccessKeyId: xx
  awsSecretKey: xx
  region: cn-northwest-1
  s3bucketName: s3/buckets/spring-boot-test
  sqs:
    queues:
      requestQueue: qx-test-request
      responseQueue: qx-test-response
mapper:
  mappers:
    - tk.mybatis.mapper.common.Mapper
  notEmpty: false
  identity: SQLSERVER
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath*:META-INF/mapper/**/*.xml

pagehelper:
  helperDialect: sqlserver
  offsetAsPageNum: true
  rowBoundsWithCount: true
  reasonable: true
  returnPageInfo: true
  params: count=countSql
---
spring:
  profiles: prod
  datasource:
    hikari:
      idle-timeout: 200000
      maximum-pool-size: 10
      minimum-idle: 30
      connection-timeout: 600000
      connection-test-query: SELECT 1
      pool-name: HikariPool
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url:  jdbc:sqlserver://springboot-sqlserver.c2lighgovwg5.rds.cn-northwest-1.amazonaws.com.cn:1433;databasename=test_db
    username: root12
    password: root123456
  redis:
    database: 0
    host: 52.82.29.19
    jedis:
      pool:
        #最大连接数据库连接数,设 0 为没有限制
        max-active: 8
        #最大等待连接中的数量,设 0 为没有限制
        max-idle: 8
        #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        max-wait: -1ms
        #最小等待连接中的数量,设 0 为没有限制
        min-idle: 0
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1ms
        min-idle: 0
      shutdown-timeout: 100ms
    password:
    port: 6379

aws:
  awsAccessKeyId: AKIAUKTTXEQSC2TFOXCT
  awsSecretKey: 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
  region: cn-northwest-1
  s3bucketName: s3/buckets/spring-boot-test
  sqs:
    queues:
      requestQueue: qx-test-request
      responseQueue: qx-test-response


mapper:
  mappers:
    - tk.mybatis.mapper.common.Mapper
  notEmpty: false
  identity: SQLSERVER
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath*:META-INF/mapper/**/*.xml

pagehelper:
  helperDialect: sqlserver
  offsetAsPageNum: true
  rowBoundsWithCount: true
  reasonable: true
  returnPageInfo: true
  params: count=countSql

#启用监控
management:
  endpoints:
    web:
      exposure:
        include:
          - "*"  # 开放所有端点health，info，metrics，通过actuator/+端点名就可以获取相应的信息。默认打开health和info
  endpoint:
    health:
      show-details: always  #未开启actuator/health时，我们获取到的信息是{"status":"UP"}，status的值还有可能是 DOWN。开启后打印详细信息




